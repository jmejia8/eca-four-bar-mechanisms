function getTrayectory(ncase, npts = 50)
	if ncase == 1
	    θ = linspace(0.5π, 2π, npts)
	    x = exp.(0.5θ).*cos.(θ)
	    y = exp.(0.5θ).*sin.(θ)
	elseif ncase == 2
		sp = 3
	    θ = linspace(0, 2π, npts)

	    x =         5cos.(θ)
	    y = 10.0 +  10sin.(θ)
	elseif ncase == 3
		θ = linspace(0, 2π, npts)
	    x = 20cos.(θ)
	    y = 2sin.(θ)
	elseif ncase == 4
		p = [
            20 20;
            20 25;
            20 30;
            20 35;
            20 40;
            20 45
        ]

	    return 0.5p  .- mean(0.5p, 1)
	elseif ncase == 5
		p = [   5.7975   -3.1105;
			    6.5328   -4.0407;
			    7.5509   -4.7384;
			    8.6256   -4.9709;
			   10.2658   -4.9128;
			   12.3020   -4.6221;
			   13.9989   -3.0523;
			   14.2817   -1.0756;
			   14.2251    0.6105;
			   14.1686    2.2384;
			   14.1120    4.0407;
			   13.5464    4.9709;
			   11.7364    5.4360;
			    7.8337    6.4826;
			    4.2704    6.5988;
			    2.6867    4.6802;
			    2.1210    2.8779;
			    1.4989   -0.0872;
			    4.1572   -1.4826;
			    ]

		return 2p .- mean(2p, 1)
	elseif ncase == 6
		p = [     2.3756    2.2965;
    3.7783    3.6337;
    5.0452    4.9128;
    6.0407    5.8430;
    6.8100    6.5988;
    7.5792    7.1802;
    8.3032    8.0523;
    9.0271    8.5756;
    9.5701    9.1570;
   10.0679    9.7384;
   13.4163   12.9942;
   14.0045   14.0988;
   14.8190   14.5058;
   15.1810   14.9709;
   16.3122   16.1919;
   # 18.3032   18.2267;
    5.0905   16.8314
			    ]

		return 2p.- mean(2p, 1)
	elseif ncase == 7
		p = [    
			   -7.5346   -4.0816;
			   -6.9816   -4.8397;
			   -6.1521   -5.4810;
			   -4.5392   -5.6560;
			   -1.8203   -5.9475;
			    0.2995   -5.7726;
			    3.5714   -5.1312;
			    5.7834   -3.6152;
			    6.8894    2.6239;
			    5.2765    3.7901;
			    1.4055    4.4898;
			   -1.9585    4.3732;
			   -4.9078    4.2566;
			   -8.0415    3.3236;
			   -9.0092    1.0496
			    ]

		return 2p .- mean(2p, 1)
	elseif ncase == 8
		p = [    -8.4842    8.2849;
			   -7.7149    7.0640;
			   -8.8914    4.8547;
			   -7.5792    3.9244;
			   -8.5294    2.4128;
			   -6.8552    2.0640;
			   -6.9005   -0.0291;
			   -5.0905    0.3779;
			   -4.8643   -1.2500;
			   -3.3258   -0.2035;
			   -2.6471   -2.0058;
			   -1.1538   -0.3198;
			    0.4751   -1.4826;
			    0.2941    0.9012;
			    2.0136    1.2500;
			    0.6561    3.0523;
			    2.0136    4.3314;
			    0.1584    5.0291;
			    0.7014    6.7733;
			   -1.2896    6.8314;
			   -0.5656    8.5174;
			   -2.3303    7.5872;
			   -2.6923    9.7384;
			   -4.1855    8.4012;
			   -5.8597    9.7965;
			   -6.1765    7.9360;
			   -7.3077    9.2733
			    ]

		return 2p.- mean(2p, 1)
	elseif ncase == 9
		p = [5.4525    0.5523;
	    4.8643   -0.4360;
	    3.6878   -1.3663;
	    1.7421   -2.0058;
	    0.8371   -1.7733;
	   -0.0679   -1.5407;
	   -0.4299   -0.6105;
	   -0.4299    0.6105;
	    0.0679    1.1337;
	    0.9276    1.0174;
	    1.1991    0.3779;
	    1.5158   -0.1453;
	    2.1493   -0.4942;
	    2.4208   -0.4942;
	    3.1448   -0.3779;
	    4.0950   -0.2616;
	    4.5475    0.0872;
	    5.1357    0.4360;
	    5.4525    0.6686;
	    5.8597    1.5407
			    ]

		return 4p-.- mean(4p, 1)
	elseif ncase == 10
		p = [  -5.0905    6.4244;
			   -5.1810    5.1453;
			   -5.2715    3.8663;
			   -5.3167    1.8895;
			   -5.1810   -0.9012;
			   -2.6471   -4.0407;
			    1.4253   -5.9593;
			    8.3032   -6.3081;
			    8.1674    6.3081;

			    ]

		return 2p.- mean(2p, 1)
	elseif ncase == 11
		p = [  
		   -3.6425    9.0407;
		   -4.2760    8.4593;
		   -4.6833    7.8198;
		   -5.0905    7.4128;
		   -5.8145    6.0756;
		   -6.4027    5.0872;
		   -6.6290    4.1570;
		   -6.9910    3.3430;
		   -7.2172    2.7035;
		   -7.2624    2.1802;
		   -7.3077    1.5988;
		   -7.5339   -0.2616;
		   -7.5792   -0.7849;
		   -7.5792   -1.4826;
		   -7.3982   -3.1105;
		   -7.3529   -3.8081;
		   -6.9910   -4.0988;
		   -6.6290   -4.6221;
		   -6.0860   -5.6105;
		   -5.8145   -5.8430

			    ]

		return 2p .- mean(2p, 1)
	elseif ncase == 12
		p = [  
		   0.5 1.1;
			0.4 1.1;
			0.3 1.1;
			0.2 1.0;
			0.1 0.9;
			0.05 0.75;
			0.02 0.6;
			0 0.5;
			0 0.4;
			0.03 0.3;
			0.1 0.25;
			0.15 0.2;
			0.2 0.3;
			0.3 0.4;
			0.4 0.5;
			0.5 0.7;
			0.6 0.9;
			0.6 1.0
			    ]

		return p .- mean(p, 1)
	elseif ncase == 13
		p = [  
			74.29081816	18.80037745;
			66.5117356	15.72773751;
			60.13896349	13.88496143;
			51.88685237	11.48846477;
			41.58550555	10.11693681;
			30.01157559	10.73994506;
			19.63855086	13.75429811;
			16.39195057	16.61596258;
			16.05298274	20.03027145;
			19.33643289	22.5634014;
			26.18710764	22.50893717;
			42.00886037	18.08348493;
			# 64.74204103	16.06501848
			    ]

		return p .- mean(p, 1)
	else
		θ = linspace(0, 2π, npts)
	    x =         10cos.(θ)
	    y = 10.0 +  10sin.(θ)
	end

	return [x y]
end